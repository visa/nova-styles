/**
 *              Â© 2025 Visa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
@use '../../base/color' as *; // @TODO move to separate from base 
@use './config' as *; 

// generate color variations 
$colors: (
  primary: generate-gradient($primary),
  secondary: generate-gradient($secondary),
  grayscale: generate-gradient($lightest, $darkest),
  positive: generate-gradient($positive),
  warning: generate-gradient($warning),
  negative: generate-gradient($negative),
  info: generate-gradient($info)
);

// define css variables based on available colors 
@layer theme {
  :root,
  ::backdrop {
    --color-transparent: rgba(255, 255, 255, 0);
    --color-primary: #{$primary};
    --color-secondary: #{$secondary};
    --color-lightest: #{$lightest};
    --color-darkest: #{$darkest};
    --color-positive: #{$positive};
    --color-warning: #{$warning};
    --color-negative: #{$negative};
    --color-info: #{$info};

    @each $color, $shades in $colors {
      @each $shade, $value in $shades {
        --color-#{"" + $color}-#{$shade}: #{$value};
      }
    }
  }
}

// define theme palette with color variables 
$palette: (
  default: (
    active: var(--color-primary), 
    active-hover: var(--color-primary-100),
    active-pressed: var(--color-primary-60),
    active-subtle: var(--color-grayscale-70), 
    active-accent: var(--color-secondary), 
    surface-1: var(--color-darkest), 
    surface-2: var(--color-grayscale-10),
    surface-3: var(--color-grayscale-20),
    surface-highlight: var(--color-primary-20),
    surface-lowlight: var(--color-primary-30),
    text: var(--color-lightest), 
    text-subtle: var(--color-grayscale-70),
    text-on-active: var(--color-grayscale-20), 
    border: var(--color-grayscale-30),
    disabled: var(--color-grayscale-20),
    overlay: var(--color-grayscale-70),
    "transparent": var(--color-transparent),
  ),
  alternate: (
    active: var(--color-lightest), 
    active-hover: var(--color-grayscale-90), 
    active-pressed: var(--color-grayscale-80), 
    active-subtle: var(--color-secondary-30), 
    active-accent: var(--color-lightest), 
    surface-1: var(--color-darkest), 
    surface-2: var(--color-primary-50),
    surface-3: var(--color-primary-40),
    surface-highlight: var(--color-primary-60),
    surface-lowlight: var(--color-primary-40),
    text: var(--color-lightest), 
    text-subtle: var(--color-grayscale-110),
    text-on-active: var(--color-primary-30),
    border: var(--color-primary-70),
    disabled: var(--color-primary-80),
    overlay: var(--color-grayscale-70),
    "transparent": var(--color-transparent)
  ),
  messaging: (
    // positive
    highlight-positive: var(--color-positive-110), 
    lowlight-positive: var(--color-positive-100),  
    surface-positive: var(--color-positive-50),
    graphics-positive: var(--color-positive), 
    text-hover-positive: var(--color-positive-60), 
    text-positive: var(--color-positive-90), 
    text-pressed-positive: var(--color-positive-40), 
    // warning
    highlight-warning: var(--color-warning-40), 
    graphics-warning: var(--color-warning), 
    text-warning: var(--color-warning-90), 
    // negative
    highlight-negative: var(--color-negative-110), 
    lowlight-negative: var(--color-negative-100),  
    surface-negative: var(--color-negative-40),
    graphics-negative: var(--color-negative), 
    text-hover-negative: var(--color-negative-90), 
    text-negative: var(--color-negative-80), 
    text-pressed-negative: var(--color-negative-90), 
    // info
    highlight-info: var(--color-info-40), 
    graphics-info: var(--color-info), 
    text-info: var(--color-info-90),
  )
); 

@layer theme {
  :root,
  ::backdrop {
    @each $scheme, $tokens in $palette {
      @each $token, $value in $tokens {
        --palette-#{$scheme}-#{$token}: #{$value};
      }
    }
    --palette-accent-app-name: var(--color-primary);
  }

  .v-alternate {
    @each $default-token, $default-value in map-get($palette, "default") {
      @each $alternate-token, $alternate-value in map-get($palette, "alternate") {
        @if $default-token == $alternate-token {
          --palette-default-#{$default-token}: var(--palette-alternate-#{$alternate-token});
        }
      }
    }
  }
}
